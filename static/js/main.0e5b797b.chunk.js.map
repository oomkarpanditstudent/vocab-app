{"version":3,"sources":["components/TextForm.js","App.js","reportWebVitals.js","index.js"],"names":["TextForm","wordList","random","Math","floor","length","wordToList","_useState","useState","_useState2","Object","slicedToArray","count","setCount","_useState3","_useState4","word","setWord","_useState5","_useState6","meaning","setMeaning","_useState7","_useState8","opposite","setOppositeMeaning","_useState9","_useState10","example","setExample","_useState11","_useState12","typeWord","setTypeWord","incrementCount","findMeaning","w","fetch","then","response","json","meanings","definitions","map","x","i","definition","y","antonyms","z","catch","error","console","log","alert","react_default","a","createElement","Fragment","className","id","onClick","rows","value","onChange","e","document","getElementById","disabled","target","App","reportWebVitals","onPerfEntry","Function","__webpack_require__","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.0e5b797b.chunk.js","sourcesContent":["import React,{useState} from 'react';\n\nexport default function TextForm() {\n    //let wordList=[\"fitted\",\"flamingoes\",\"flannel\",\"foreign\",\"fortunate\",\"foundation\",\"frequent\",\"friar\",\"fuel\",\"funnel\",\"further\",\"gallery\",\"gentlemen\",\"ginger\",\"glimpse\",\"gospel\",\"government\",\"grammar\",\"graze\",\"grievance\",\"grocer\",\"groceries\",\"growth\",\"guard\",\"guess\",\"guinea\",\"guitars\",\"gulf\",\"gurgle\",\"habit\",\"happiness\",\"harbour\",\"headache\",\"heathen\",\"height\",\"helicopter\",\"hexagon\",\"hideout\",\"hinge\",\"hockey\",\"hoist\",\"honour\",\"hurried\",\"hypnotise\",\"idea\",\"impertinent\",\"include\",\"ingredients\",\"inpatient\",\"insane\",\"inspire\",\"introduce\",\"introvert\",\"invade\",\"invitation\",\"Italy\",\"itemise\",\"jewel\",\"journal\",\"junior\",\"justice\",\"kilogram\",\"language\",\"latitude\",\"laundrette\",\"lightning\",\"litter\",\"loan\",\"longbow\",\"lorgnette\",\"lyric\",\"mackerel\",\"madam\",\"magic\",\"magistrate\",\"manageress\",\"marries\",\"meanness\",\"mechanic\",\"memorandum\",\"mention\",\"mercy\",\"minister\",\"miser\",\"misery\",\"moderate\",\"monument\",\"motoring\",\"motorist\",\"mountainous\",\"multiply\",\"multiplying\",\"nectar\",\"neglect\",\"neighbour\",\"neighbours\",\"neither\",\"ninth\",\"nought\",\"nudge\",\"oath\",\"objector\",\"oblige\",\"observation\",\"observe\",\"obviously\",\"onion\",\"orator\",\"outdoors\",\"outrageous\",\"overalls\",\"pane\",\"parallelogram\",\"parcel\",\"passage\",\"pavement\",\"payment\",\"peacefully\",\"percolator\",\"performance\",\"perspire\",\"persuasion\",\"pigeon\",\"pillar\",\"pledge\",\"plunge\",\"policewomen\",\"population\",\"pore\",\"possess\",\"practice\",\"prance\",\"precise\",\"precision\",\"pregnant\",\"prepare\",\"preserve\",\"previously\",\"problem\",\"produce\",\"progress\",\"promise\",\"promote\",\"prompt\",\"punctually\",\"purchase\",\"purpose\",\"quickstep\",\"rabies\",\"racial\",\"radius\",\"rapid\",\"ruction\",\"reader\",\"receive\",\"receiving\",\"recipe\",\"recite\",\"reduce\",\"redundant\",\"refuge\",\"refused\",\"refuses\",\"reign\",\"relief\",\"reluctant\",\"represent\",\"reilsieve\",\"revise\",\"rogue\",\"abbey\",\"absence\",\"accentuate\",\"access\",\"accommodation\",\"acquaint\",\"acquaintance\",\"acquainted\",\"acquire\",\"advertise\",\"advertisement\",\"albatross\",\"ambition\",\"ambitious\",\"angle\",\"angling\",\"anniversary\",\"annoy\",\"annoyed\",\"antiseptic\",\"apparent\",\"application\",\"approve\",\"aqualung\",\"architect\",\"arguable\",\"arrival\",\"assassinate\",\"assistance\",\"athletic\",\"authoress\",\"bachelor\",\"badminton\",\"bankrupt\",\"barricade\",\"bassoon\",\"beverages\",\"boycott\",\"bulbous\",\"burden\",\"capable\",\"capillary\",\"carnivorous\",\"cartridge\",\"cathedral\",\"cenotaph\",\"challenge\",\"chaotic\",\"character\",\"chess\",\"Chinese\",\"chisel\",\"choir\",\"circumstance\",\"circus\",\"civil\",\"civilised\",\"cleanliness\",\"coconut\",\"college\",\"collie\",\"combination\",\"commence\",\"commit\",\"complaint\",\"compliment\",\"composer\",\"comprehension\",\"computer\",\"comrade\",\"âœ“\",\"concern\",\"conclusion\",\"confetti\",\"conflict\",\"conform\",\"coniferous\",\"cowardly\",\"create\",\"creation\",\"creditable\",\"crime\",\"croutons\",\"crystal\",\"cuckoo\",\"cutlery\",\"cyclic\",\"dainty\",\"decision\",\"defect\",\"definite\",\"denim\",\"deposit\",\"description\",\"design\",\"despair\",\"despise\",\"destination\",\"destitute/\",\"destruction\",\"detail\",\"develop\",\"devious\",\"difference\",\"digest\",\"digestion\",\"disappoint\",\"dissolve\",\"distribute\",\"divan\",\"division\",\"domestic\",\"dubious\",\"elegant\",\"ellipse\",\"emergency\",\"emigrant\",\"energy\",\"enormous\",\"essay\",\"estuary\",\"evaporate\",\"evidence\",\"exceeding\",\"excitement\",\"exclusion\",\"excommunicate\",\"execute\",\"exhausted\",\"exhilarate\",\"explosion\",\"extravagance\",\"extravagant\",\"extreme\",\"extremely\",\"exuberance\",\"fabulous\",\"faithful\",\"famine\",\"fanatical\",\"fatal\",\"feat\",\"filleting\",\"firework\",\"flavour\",\"flaw\",\"formulae\",\"formulate\",\"fossil\",\"fragrant\",\"freight\",\"friendly\",\"frigid\",\"fungus\",\"gateau\",\"generous\",\"genuine\",\"conker\",\"consideration\",\"contagious\",\"contest\",\"continually\"];\n    let wordList=[\"Ambling\", \"Accusatory\", \"Allusion\", \"Adjourn\", \"Apathetic\", \"Apprise\", \"Affliction\", \"Anguish\", \"Amply\", \"Abate\", \"Abrasive\", \"Assented\", \"Apathetic\", \"Absolution\", \"Amateur\", \"Amphibian\", \"Ally\", \"Authentic\", \"Alleviate\", \"Aide\", \"Aped\", \"Ablest\", \"Axiom\", \"Allay\", \"Affluent\", \"Ambles\", \"Amiable\", \"Askance\", \"Adherent\", \"Augmenting\", \"Alleviate\", \"Ascent\", \"Aberration\", \"Altercation\", \"Arduous\", \"Apprehensive\", \"Annihilated\", \"Agnostic\", \"Abundance\", \"Abode\", \"Acquainted\", \"Affable\", \"Antiquity\", \"Asunder\", \"Arduous\", \"Adversary\", \"Aghast\", \"Altruistic\", \"Balk\", \"Baleful\", \"Burgeon\", \"Breadth\", \"Bray\", \"Beam\", \"Bleak\", \"Bleats\", \"Barbarian\", \"Breach\", \"Boastful\", \"Busk\", \"Benign\", \"Boisterous\", \"Brazen\", \"Bellicose\", \"Bickering\", \"Bereft\", \"Braggart\", \"Brevity\", \"Benevolent\", \"Belligerent\", \"Besieged\", \"Bewildered\", \"Confiscate\", \"Crucial\", \"Corroborate\", \"Convoluted\", \"Confiscated\", \"Curtail\", \"Chastised\", \"Cursory\", \"Corrosive\", \"Complicity\", \"Contemplate\", \"Conceivable\", \"Culpable\", \"Coercion\", \"Concerted\", \"Cherished\", \"Callow\", \"Conspicuous\", \"Croak\", \"Confine\", \"Chaos\", \"Confiscate\", \"Clement\", \"Curate\", \"Combat\", \"Complacent\", \"Credibility\", \"Chicanery\", \"Cacophony\", \"Convoluted\", \"Chauvinist\", \"Convoluted\", \"Colloquial\", \"Candid\", \"Customary\", \"Customary\", \"Compelling\", \"Chicanery\", \"Commotion\", \"Conceited\", \"Conducive\", \"Contented\", \"Coarse\", \"Calamity\", \"Deploy\", \"Dismay\", \"Discretionary\", \"Diffident\", \"Diction\", \"Deride\", \"Droll\", \"Diligent\", \"Dour\", \"Deluge\", \"Delude\", \"Derail\", \"Delude\", \"Duress\", \"Destitute\", \"Derivative\", \"Deranged\", \"Dale\", \"Drone\", \"Deject\", \"Dismal\", \"Diligence\", \"Defy\", \"Darn\", \"Discerning\", \"Demotion\", \"Demure\", \"Delectable\", \"Discerning\", \"Diligent\", \"Disparate\", \"Diffident\", \"Detractors\", \"Derisive\", \"Derision\", \"Disparaging\", \"Despised\", \"Demote\", \"Decree\", \"Detain\", \"Destitute\", \"Despondent\", \"Devour\", \"Disintegrate\", \"Doubtful\", \"Destitute\", \"Dilapidated\", \"Disarray\", \"Dismal\", \"Dishevelled\", \"Exonerate\", \"Elated\", \"Enchant\", \"Erasable\", \"Edible\", \"Effusion\", \"Effigy\", \"Enrage\", \"Erroneous\", \"Engrossed\", \"Emanate\", \"Epoch\", \"Expel\", \"Era\", \"Enmity\", \"Extrovert\", \"Elude\", \"Elect\", \"Endeavour\", \"Exhort\", \"Eminent\", \"Frugal\", \"Feasible\", \"Furtive\", \"Feral\", \"Formidable\", \"Feign\", \"Flatulence\", \"Frantic\", \"Flimsy\", \"Finesse\", \"Ferocity\", \"Foe\", \"Filly\", \"Foal\", \"Forge\", \"Futile\", \"Fastidious\", \"Frivolous\", \"Flamboyant\", \"Flourish\", \"Fiasco\", \"Futile\", \"Furtively\", \"Forsake\", \"Forsake\", \"Fortuitous\", \"Fraudulent\", \"Grandeur\", \"Gallant\", \"Goaded\", \"Gentility\", \"Granular\", \"Gallant\", \"Gasket\", \"Grandiose\", \"Gregarious\", \"Genealogy\", \"Gratuitous\", \"Gauge\", \"Guttural\", \"Hoes\", \"Heeding\", \"Hinder\", \"Hinge\", \"Harmonious\", \"Hierarchical\", \"Hoof\", \"Hearth\", \"Hubris\", \"Helix\", \"Hoax\", \"Heedless\", \"Inference\", \"Infernal\", \"Infamy\", \"Impose\", \"Impoverished\", \"Inexplicable\", \"Ineptitude\", \"Instructive\", \"Inedible\", \"Injustice\", \"Introvert\", \"Infatuate\", \"Intact\", \"Idyllic\", \"Insistent\", \"Idol\", \"Inhale\", \"Industrious\", \"Indolent\", \"Insipid\", \"Idiom\", \"Impartial\", \"Inattentive\", \"Imminent\", \"Idyllic\", \"Indolent\", \"Impoverished\", \"Integral\", \"Implicate\", \"Irreverent\", \"Imprudent\", \"Inferior\", \"Inconspicuous\", \"Instigate\", \"Incessant\", \"Intuitive\", \"Idiosyncrasy\", \"Impudent\", \"Inaudible\", \"Inaugural\", \"Impermeable\", \"Inaugurate\", \"Inedible\", \"Inconspicuous\", \"Innocuous\", \"Insolent\", \"Introvert\", \"Implicate\", \"Intercede\", \"Impecunious\", \"Jovial\", \"Keel\", \"Lair\", \"Lofty\", \"Luminous\", \"Liberal\", \"Lucrative\", \"Luminous\", \"Lustrous\", \"Lunar\", \"Lame\", \"Litigation\", \"Luminary\", \"Languish\", \"Lament\", \"Lavish\", \"Lenient\", \"Liable\", \"Lure\", \"Lethargic\", \"Malleable\", \"Mare\", \"Mere\", \"Mute\", \"Malice\", \"Meddle\", \"Mare\", \"Muted\", \"Mace\", \"Munificence\", \"Mediocre\", \"Monochrome\", \"Mitigating\", \"Monotonous\", \"Meanders\", \"Melancholic\", \"Meticulous\", \"Mediocre\", \"Malignant\", \"Melodious\", \"Meticulous\", \"Meticulous\", \"Nominal\", \"Nuance\", \"Novice\", \"Nobility\", \"Nuisance\", \"Nauseous\", \"Nuisance\", \"Obligatory\", \"Onerous\", \"Ordained\", \"Ordeal\", \"Oblong\", \"Oblige\", \"Omnivore\", \"Omit\", \"Orator\", \"Oscillate\", \"Ostentatious\", \"Obfuscate\", \"Obscure\", \"Obstinate\", \"Ostentatious\", \"Pivotal\", \"Placate\", \"Profess\", \"Prudent\", \"Plenary\", \"Prohibit\", \"Plethora\", \"Ponder\", \"Prudence\", \"Predominantly\", \"Predilection\", \"Plethora\", \"Peril\", \"Prelude\", \"Perchance\", \"Porous\", \"Peripheral\", \"Plummet\", \"Plaintiff\", \"Palpable\", \"Plethora\", \"Pact\", \"Pillage\", \"Pew\", \"Pacifist\", \"Prejudiced\", \"Pungent\", \"Pragmatic\", \"Precocious\", \"Ponderous\", \"Prominent\", \"Pious\", \"Perpetuate\", \"Precedent\", \"Passive\", \"Plausible\", \"Precocious\", \"Protract\", \"Prominence\", \"Pungent\", \"Prosper\", \"Perilous\", \"Perplexed\", \"Prominent\", \"Precarious\", \"Prejudice\", \"Prosperous\", \"Quarry\", \"Quarantine\", \"Quandary\", \"Quondary\", \"Quaint\", \"Remnant\", \"Rarity\", \"Relegate\", \"Retrieve\", \"Remnants\", \"Resonant\", \"Ramification\", \"Revile\", \"Receptacle\", \"Ransack\", \"Recede\", \"Reel\", \"Reverence\", \"Repelled\", \"Residue\", \"Reluctant\", \"Receptacle\", \"Repercussions\", \"Ravenous\", \"Rogue\", \"Reprimand\", \"Recite\", \"Reap\", \"Ruffian\", \"Respite\", \"Retort\", \"Resilience\", \"Reprieve\", \"Rhapsody\", \"Reprieve\", \"Severe\", \"Strenuous\", \"Stipulatory\", \"Scarcity\", \"Sanctity\", \"Stolid\", \"Subtlety\", \"Stout\", \"Sage\", \"Sanction\", \"Sups\", \"Spic\", \"Squeak\", \"Sphere\", \"Stout\", \"Stance\", \"Sonnet\", \"Swallow\", \"Supplicate\", \"Sundry\", \"Suggestible\", \"Subservient\", \"Sycophancy\", \"Significant\", \"Scowl\", \"Superiority\", \"Scholastic\", \"Sacrifice\", \"Squabble\", \"Succinct\", \"Sceptical\", \"Squabble\", \"Superfluous\", \"Tranquility\", \"Tardy\", \"Terminate\", \"Trivial\", \"Trepidation\", \"Taut\", \"Tweak\", \"Transient\", \"Tapestry\", \"Turbulent\", \"Traitor\", \"Tempestuous\", \"Unwitting\", \"Ultimatum\", \"Unscrupulous\", \"Unanimous\", \"Unsurpassed\", \"Unorthodox\", \"Unfathomable\", \"Virtuous\", \"Voracious\", \"Ventriloquist\", \"Vanguard\", \"Vanadium\", \"Vilify\", \"Veil\", \"Vague\", \"Vice\", \"Virtue\", \"Viable\", \"Vivid\", \"Vixen\", \"Vapid\", \"Vigilant\", \"Vain\", \"Vicarious\", \"Venerable\", \"Verge\", \"Voracious\", \"Wretch\", \"Wither\", \"Wary\", \"Whimsical\", \"Yearn\", \"Yearned\"]\n    const random = Math.floor(Math.random() * wordList.length);\n    let wordToList=wordList[random];\n    const [count,setCount]=useState(0);\n    const [word,setWord]=useState(wordToList);\n    const [meaning,setMeaning]=useState('Meaning...');\n    const [opposite,setOppositeMeaning]=useState('Opposite...');\n    const [example,setExample]=useState('Example in sentence...');\n    const [typeWord,setTypeWord]=useState(\"\");\n    \n    \n\n    function newWord(){\n      wordToList=wordList[random];\n      setWord(wordToList)\n      setMeaning('Meaning...');\n      setOppositeMeaning('Opposite...');\n      setExample('Example in sentence...');\n      setTypeWord(\"\");\n      \n    }\n\n    function incrementCount(){\n      setCount(count+1);\n    }\n\n    function findMeaning(w){\n       fetch('https://api.dictionaryapi.dev/api/v2/entries/en/'+w)\n        .then(response => response.json())\n        .then(json => {  \n      \n         setMeaning( (json[0].meanings[0].definitions).map((x,i)=>{\n            return (\" Meaning \"+(i+1)+\":  \"+x.definition);\n          }))\n         setOppositeMeaning( (json[0].meanings[0].definitions).map((y,i)=>{\n            return (\" Opposite Meaning \"+(i+1)+\":  \"+y.antonyms);\n          }))\n        setExample( (json[0].meanings[0].definitions).map((z,i)=>{\n            return \" Example with Sentence \"+(i+1)+\":  \"+(z.example);\n          }))\n        }).catch(function(error) {\n          console.log(error);\n          alert(\"Sorry, we do not have a meaning for this word\");\n\n      });\n      \n    }\n\n  return (\n   <>\n    <div className=\"container-fluid\">\n    <div className=\"container\">\n    <div className=\"row\">\n    <div className=\"jumbotron jumbotron-fluid\">\n      <h1>Find a meaning for below word...</h1>\n      <hr></hr>\n    <div >\n      <h2>{word}</h2>\n       <span className=\"form-control w-100 mb-2\" id=\"myBoxRead\" >{meaning}</span>\n       <span className=\"form-control w-100 mb-2\" id=\"myBoxReadOpposite\" >{opposite}</span>\n       <span className=\"form-control w-100 mb-2\" id=\"myBoxReadExample\">{example}</span>\n    </div>\n    <button className=\"btn btn-primary p-2 m-2\" onClick={()=>{if(meaning===\"Meaning...\"){incrementCount();findMeaning(word)}}}>Find Meaning </button>\n    <button className=\"btn btn-danger  p-2 m-2\" onClick={()=>{newWord() }}>New Word</button>\n    </div>\n    </div >\n    <div className=\"row\">\n    <div className=\"jumbotron jumbotron-fluid\">\n    <h2>Enter a word to find meaning...</h2>\n  \n    <div className=\"mb-2\">\n       <textarea className=\"form-control w-50\" id=\"myBoxWrite\" rows=\"1\" value={typeWord}  onChange={(e) => {document.getElementById(\"btn2\").disabled=false; setTypeWord(e.target.value)}}></textarea>\n    </div>\n   \n    <button id=\"btn2\" className=\"btn btn-primary mb-2\" onClick={(e)=>{if(typeWord!==\"\"){e.target.disabled=true ;incrementCount();findMeaning(typeWord);setWord('Meaning for your search....') }}}>Find Meaning </button>\n    <div>\n    <h5 >You have so far learned {count} words.</h5>\n    </div>\n    </div>\n    </div>\n    \n  </div>\n</div>\n\n     \n   \n</>\n  )\n}\n","import './App.css';\nimport React from 'react';\nimport TextForm from './components/TextForm';\n\nfunction App() {\n\n  return (\n  <>\n   \n    <div className=\"container\" >\n    <TextForm />\n    </div>\n\n  </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}